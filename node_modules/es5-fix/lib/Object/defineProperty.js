'use strict';

var create = Object.create
  , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor
  , _native  = Object.defineProperty
  , _native2 = Object.defineProperties
  , defineProperty

  , oForEach = require('es5-ext/lib/Object/plain/for-each').call
  , merge    = require('es5-ext/lib/Object/plain/merge').call;

if (_native(create(null, { x: { value: 'foo', configurable: true } }),
	 'x', { value: 'bar' }).x !== 'bar') {

	// http://code.google.com/p/chromium/issues/detail?id=72736
	// https://bugs.webkit.org/show_bug.cgi?id=54289

	defineProperty = Object.defineProperty = function (obj, name, desc) {
		var odesc;
		if (
			// Error - fallback to native
			!obj ||
				// Objects created with Object.create(null) don't have hasOwnProperty
				// If it's set for first time - will work
				(!obj.hasOwnProperty ? !(name in obj) : !obj.hasOwnProperty(name)) ||
				// Is writable - will work
				desc.writable ||
				// Will be writable - will work
				((odesc = getOwnPropertyDescriptor(obj, name)) && (odesc.writable ||
					// Error - fallback to native
					!odesc.configurable))) {
			return _native(obj, name, desc);
		}
		delete obj[name];
		return _native(obj, name, odesc ? merge(odesc, desc) : desc);
	};

	Object.defineProperties = function (obj, props) {
		if (!obj || !props) {
			return _native2(obj, props);
		}
		oForEach(props, function (value, key) {
			defineProperty(obj, key, value);
		});
		return obj;
	};
}
