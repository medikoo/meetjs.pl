'use strict';

var toArray = require('es5-ext/lib/List/to-array').call

  , document = new (require('jsdom/lib/jsdom/level3/core')
		.dom.level3.core.Document)()
  , domjs = require('domjs/lib/html5')(document, require);

module.exports = function (t, a) {
	var home, header, content, foo, bar, other, body, par, newcontent;
	var root = document.appendChild(document.createElement('html'));
	root.appendChild(document.createElement('head'));
	body = root.appendChild(document.createElement('body'));
	home = t(domjs, body, function () {
		if (header) {
			a.never();
		}
		header = div({ id: 'header'}, "Header")();
		content = div({ id: 'content' },
			foo = div({ id: 'foo' },
				p("foo"),
				p("bar"))(),
			div(bar = div({ id: 'bar' },
				p("Other foo"),
				p("Other bar"))()))();
	});
	home.name = 'home';
	a.deep(toArray(body.childNodes), [header, content], "Expected body content");

	home.diff('page1',
		'foo', function () {
			span("foo 1 ");
			span("foo 2");
		},
		'bar', function () {
			span("bar 1 ");
			span("bar 2");
		}
	);

	home.diff('page2',
		'content', function () {
			par = p("Whatever")();
			if (other) {
				a.never();
			}
			other = div({ id: 'other-content' },
				div("page2 other 1 "),
				div("page2 other 2"))();
		}
	);

	home.page2.diff('page3', './__playground/page3');

	home.diff('newpage',
		body, function () {
			newcontent = div()();
		}
	);

	a.deep(toArray(content.childNodes), [foo, bar.parentNode],
		"Inner child content");

	home.page1.load();
	a(foo.textContent, 'foo 1 foo 2', "Replace content #1");
	a(bar.textContent, 'bar 1 bar 2', "Replace content #2");

	home.page2.page3.load();
	a.deep(toArray(content.childNodes), [par, other],
		"Replace content (2 steps) #1");
	a(other.textContent, 'other 1 other 2', "Replace content (2 steps) #2");

	home.page2.load();
	a(other.textContent, 'page2 other 1 page2 other 2', "Go back");

	home.newpage.load();
	a.deep(toArray(body.childNodes), [newcontent], "Replace whole content");

	home.load();
	a.deep(toArray(body.childNodes), [header, content], "Reload home #1");
	a.deep(toArray(content.childNodes), [foo, bar.parentNode], "Reload home #2");
};
