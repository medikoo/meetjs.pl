'use strict';

var extend = require('es5-ext/lib/Object/extend').call;

module.exports = function (node, expose) {
	return extend(node, {
		implementation:  { value: null, enumerable: expose },
		documentElement: { value: null, enumerable: expose  },
		createNode: { value: function () {
			return Object.create(node, {
				parentNode:    { value: null, enumerable: expose, configurable: true },
				ownerDocument: { value: this, enumerable: expose },
				childNodes:    { value: [],   enumerable: expose },
				firstChild:    { value: null, enumerable: expose, configurable: true },
				lastChild:     { value: null, enumerable: expose, configurable: true }
			});
		}, enumerable: expose },
		appendChild: { value: function (_super, newChild) {
			if (this.childNodes.length) {
				throw new Error("Document can have only one child");
			}
			_super(this, newChild);
			Object.defineProperty(this, 'documentElement', {
				value: newChild, configurable: true, enumerable: expose });
			return newChild;
		}, enumerable: expose },
		removeChild: { value: function (_super, oldChild) {
			_super(this, oldChild);
			Object.defineProperty(this, 'documentElement', {
				value: null, configurable: true, enumerable: expose });
			return oldChild;
		}, enumerable: expose }
	});
};
