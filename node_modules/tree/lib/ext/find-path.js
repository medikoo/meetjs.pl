'use strict';

var seek = function (path, from, to, opposite) {
	var node = from, root = from.ownerDocument;
	while ((node = node.parentNode)) {
		if (node === to) {
			return true;
		} else if (node === root) {
			return false;
		}
		path[opposite ? 'unshift' : 'push'](node);
	}
	return false;
};

module.exports = function (from, to) {
	var path, fPath, tPath, root, node;
	if (from === to) {
		return [];
	}
	root = from.ownerDocument;
	if (root !== to.ownerDocument) {
		throw new Error('Cannot calculate path between nodes from different documents');
	}

	if (seek(fPath = [], from, to)) {
		path = fPath;
	} else if (seek(tPath = [], to, from, true)) {
		path = tPath;
	} else {
		path = fPath.concat(tPath.slice(1));
	}
	path.push(to);

	return path;
};
