'use strict';

var copy    = require('es5-ext/lib/Object/plain/clone').call
  , cimp    = require('../lib/implementation')
  , dschema = require('../lib/schema').setDynamic;

module.exports = function (t, a) {
	var imp, ns1, ns2, o1, o2, o3, rel, orel, tmp
	  , x = {}, y = {}, z = {};

	imp = cimp();
	ns1 = imp.create('foo23', dschema({}));
	ns2 = imp.create('bar43', dschema({ foo: { type: ns1 } }));
	o1 = ns1.create({ x: x, y: y, z: y, name: 'o1' });
	o2 = ns2.create({ foo: o1, w: y });

	rel = ns1.getRelation(ns2);
	tmp = {}; tmp[o1._id] = rel[o1._id];
	a.deep(copy(rel), tmp, "Content");
	a(orel = rel.get(o1), rel[o1._id], "Get");
	tmp = {}; tmp[o2._id] = o2;
	a.deep(copy(orel), tmp, "Relation: content");
	a(orel.from, o1, "Rel: from");
	a(orel.to, ns2, "Rel: to");
	a(orel.name, 'foo', "Rel: name");
	a.deep(orel.relations, {}, "Rel: relations");

	o3 = ns1.create({ x: x, z: y, name: 'o3' });
	a.ok(!!rel.get(o3), "Get: not related");

	tmp = {}; tmp[o1._id] = rel[o1._id]; tmp[o3._id] = rel[o3._id];
	a.deep(copy(rel), tmp, "Content after not related");

	o2._set('foo', o3);
	tmp = {}; tmp[o2._id] = o2;
	a.deep(copy(orel), {}, "Relation: content after switch #1");
	a.deep(copy(orel = rel[o3._id]), tmp, "Relation: content after switch #2");

	o3._destroy();
	tmp = {}; tmp[o1._id] = rel[o1._id];
	a.deep(copy(rel), tmp, "Content after destroy");
	a.deep(copy(orel), {}, "Relation: content after destroy");
};
